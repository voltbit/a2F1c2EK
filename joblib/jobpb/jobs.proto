syntax = "proto3";

option go_package = "jobpb";

/*
The comments are added specifically to make it easier to follow along with the
interview task requirements - hence the source detail.

All responses are relative to the corresponding request and are made by the
Controller.
*/

// Source: user facing app
// Defines a new ingestion job
message DatasetIngestionJobRequest {
  string job_id = 1;
  string userID = 2;
  bool urgency = 3;
  DataProtocol protocol = 4;
  string query = 5;
}

message DatasetIngestionJobResponse {}

// Source: user facing app
message DatasetIngestionJobStatusRequest {
  string job_id = 1;
}

message DatasetIngestionJobStatusResponse {
  string job_status = 1;
}

// Source: dataset ingestor
message DatasetIngestionResultRequest {
  string result_id = 1;
  string job_id = 2;
  IngestionStatus status = 3;
  string dataset = 4;
}

message DatasetIngestionResultResponse {}

// Source: insight generator
message JobDatasetRequest {
  string job_id = 1;
}

message JobDatasetResponse {
  string dataset = 1;
}

enum DataProtocol {
  UNDEFINED = 0;
  JDBC = 1;
  ODBC = 2;
  S3 = 3;
  LOOKER = 4;
}

enum IngestionStatus {
  PENDING = 0;
  SUCCESSFUL = 1;
  FAILED = 2;
}

service JobManager {
  rpc CreateIngestionJob (DatasetIngestionJobRequest) returns (DatasetIngestionJobResponse);
  rpc ReadIngestionJob (DatasetIngestionJobStatusRequest) returns (DatasetIngestionJobStatusResponse);
  rpc CreateIngestionResult (DatasetIngestionResultRequest) returns (DatasetIngestionResultResponse);
  rpc ReadJobDataset (JobDatasetRequest) returns (JobDatasetResponse);
}
